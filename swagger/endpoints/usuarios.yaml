# GET USUARIOS
/usuario?desde={desde}:
  get:
    summary: Retorna la lista de usuarios
    tags: [Usuario]
    parameters:
      - in: query
        name: desde
        schema:
          type: number
        description: Numero desde donde empieza la paginacion
    responses:
      200:
        description: Lista de usuarios
        content:
          application/json:
            schema:
              type: object
              properties:
                ok:
                  type: boolean
                usuarios:
                  type: array
                  items:
                    $ref: "#/components/schemas/Usuario"
                total:
                  type: number
      500:
        description: Error cargando los usuarios
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
# POST USUARIOS
/usuario:
  post:
    summary: Se crea un usuario
    tags: [Usuario]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Usuario"
    responses:
      201:
        description: Usuario creado
        content:
          application/json:
            schema:
              type: object
              properties:
                ok:
                  type: boolean
                usuarios:
                  $ref: "#/components/schemas/Usuario"
                usuarioToken:
                  type: string
      400:
        description: Error al crear el usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
# PUT USUARIOS
/usuario/{id}:
  put:
    summary: Se modifica un usuario
    tags: [Usuario]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Usuario"
    responses:
      200:
        description: Usuario modificado
        content:
          application/json:
            schema:
              type: object
              properties:
                ok:
                  type: boolean
                usuario:
                  $ref: "#/components/schemas/Usuario"
      400:
        description: Error al buscar el usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
      500:
        description: Error al actualizar el usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
  # DELETE USUARIOS
  delete:
    summary: Se elimina un usuario
    tags: [Usuario]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Id del usuario
    responses:
      200:
        description: Usuario eliminado
        content:
          application/json:
            schema:
              type: object
              properties:
                ok:
                  type: boolean
                usuario:
                  $ref: "#/components/schemas/Usuario"
      400:
        description: No existe un usuario con este ID
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
      500:
        description: Error al eliminar al usuario
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errors"
